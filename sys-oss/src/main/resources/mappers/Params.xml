<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ayl.advert.dao.ParamsDao">
    <!--参数表-->
    <sql id="table">params</sql>

    <sql id="base_columns">
        ${alias}`value`,
        ${alias}`remark`,
        ${alias}`create_time`
    </sql>

    <sql id="find_columns">
        ${alias}`id`,
        <include refid="base_columns"/>
    </sql>

    <resultMap id="resultMap" type="com.ayl.advert.model.Params">
        <id property="id" column="id"/>
    </resultMap>

    <select id="get" resultMap="resultMap">
        select
        <include refid="find_columns">
            <property name="alias" value="t."/>
        </include>
        from
        <include refid="table"/>
        t
        where
        id=#{id}
    </select>

    <sql id="insert_columns">(
        <include refid="base_columns">
            <property name="alias" value=""/>
        </include>
      )
    </sql>

    <sql id="insert_values">(
        #{id},
        #{value},
        #{remark},
        #{create_time}
      )
    </sql>

    <sql id="update_columns">
        value=#{value},
        remark=#{remark}
    </sql>


    <insert id="save" >
        insert into
        <include refid="table"/>
        <include refid="insert_columns"/>
        values
        <include refid="insert_values"/>
    </insert>

    <update id="update">
        update
        <include refid="table"/>
        <set>
            <include refid="update_columns"/>
        </set>
        where
        id=#{id}
    </update>


    <sql id="where">
        <where>
            <if test="query.id!=null">
                and t.id =#{query.id}
            </if>
            <if test="query.remark!=null and query.remark!=''">
                and t.remark like CONCAT('%',#{query.remark},'%')
            </if>
        </where>
    </sql>


    <select id="findCnt" resultType="Long">
        select
        count(1)
        from
        <include refid="table"/>
        t
        <include refid="where"/>
    </select>

    <select id="find" resultType="java.util.HashMap">
        select
        <include refid="find_columns">
            <property name="alias" value="t."/>
        </include>
        from
        <include refid="table"/>
        t
        <include refid="where"/>
        limit ${start},${limit}
    </select>

</mapper>